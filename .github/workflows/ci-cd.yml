name: CI/CD Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make
    
    - name: Build
      run: gcc -o myapp src/myapp.c

    - name: Upload myapp for testing
      uses: actions/upload-artifact@v2
      with:
        name: myapp
        path: ./myapp

  analysis:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install analysis dependencies
      run: |
        sudo apt-get install -y cloc cppcheck

    - name: Download myapp
      uses: actions/download-artifact@v2
      with:
        name: myapp
        path: ./myapp

    - name: Analyze myapp.c
      run: bash ./analysis/myapp_analyze.sh

    - name: Upload analysis results
      uses: actions/upload-artifact@v2
      with:
        name: analysis_results
        path: ./analysis/all_results.txt

  testing:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install test dependencies
      run: |
        sudo apt-get install -y gcc make check

    - name: Download myapp
      uses: actions/download-artifact@v2
      with:
        name: myapp
        path: ./myapp

    - name: Unit Tests
      run: |
        gcc -o unit_test tests/unit_test.c
        ./unit_test

    - name: Functional Tests
      run: bash ./tests/functional_test.sh

    - name: Integration Tests
      run: bash ./tests/integration_test.sh
    
    - name: System Tests
      run: bash ./tests/system_test.sh
    
    - name: Performance Tests
      run: bash ./tests/performance_test.sh
  
  reports:
    needs:
      - build
      - analysis
      - testing
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download testing artifacts
      uses: actions/download-artifact@v2
      with:
        name: testing_report
        path: reports/testing_report.txt

    - name: Download analysis artifacts
      uses: actions/download-artifact@v2
      with:
        name: analysis_report
        path: reports/analysis_report.txt

    - name: Convert testing report to HTML
      run: pandoc -f markdown -t html -o reports/testing_report.html reports/testing_report.txt

    - name: Convert analysis report to HTML
      run: pandoc -f markdown -t html -o reports/analysis_report.html reports/analysis_report.txt

    - name: Merge reports
      run: cat reports/testing_report.html reports/analysis_report.html > reports/myapp_report.html

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: myapp_reports
        path: reports/myapp_report.html

  deploy:
    needs: reports
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    


  merge:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Merge to main
      run: |
        git checkout main
        git merge $GITHUB_SHA
        git push origin main